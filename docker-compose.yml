version: '3.5'

services:
  selenium:
    image: selenium/standalone-chrome-debug
    container_name: 'selenium'
    ports:
      - 4444:4444
      - 5900:5900
    networks:
      - selenium

  django_wsgi:
    container_name: django_wsgi
    build: .
    working_dir: /code/backend
    command: uwsgi --socket=:9000 --module=config.wsgi:application --py-autoreload=1
    volumes:
      - .:/code
      - ./logs/django:/var/log/django
    networks: 
      - webnet
      - redisnet
      - postgresnet
      - selenium
    depends_on:
      - redis
      - postgres
    restart: always
  
  django_asgi:
    container_name: django_asgi
    build: .
    working_dir: /code/backend
    command: daphne -b 0.0.0.0 -p 8000 config.asgi:application
    volumes:
      - .:/code
      - ./logs/django:/var/log/django
    networks: 
      - webnet
      - redisnet
      - postgresnet
    depends_on:
      - redis
      - postgres
    restart: always

  nginx:
    container_name: nginx
    image: nginx:1.15.0
    depends_on:
      - django_asgi
      - django_wsgi
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./logs/nginx:/var/log/nginx
    networks:
      - webnet
      - selenium
    ports:
      - "80:80"
    restart: always

  redis:
    container_name: redis
    image: redis:latest
    networks: 
      - redisnet

  postgres:
    container_name: postgres
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - 'POSTGRES_DB=postgres'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_HOST_AUTH_METHOD=trust'
    ports:
      - 5433:5432
    networks:
      - postgresnet
    restart: always

volumes:
  postgres_data:

networks:
  webnet:
  redisnet:
  postgresnet:
  selenium: